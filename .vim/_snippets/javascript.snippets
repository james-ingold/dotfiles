snippet cl
console.log($0);
endsnippet

snippet fn
function $1 ($2) {
 $0
}
endsnippet

snippet ngcontroller
(function() {
  'use strict'

  angular
    .module('${1:module}')
    .controller('${2:Controller}Controller', $2Controller)

  /* @ngInject */
  function $2Controller(${3:dependencies}) {
      var vm = this
      vm.title = '$2Controller'

      activate()

      function _activate() {
      }
  }
})();
endsnippet

snippet ngdirective
(function() {
  'use strict';

  angular
    .module('${1:module}')
    .directive('${2:directive}', $2)

  /* @ngInject */
  function $2(${3:dependencies}) {
      // Usage:
      //
      // Creates:
      //
      var directive = {
          controller: ${4:Controller},
          link: link,
          restrict: 'A',
          scope: {
          }
      };
      return directive;

      function link (scope, element, attrs) {
      }
  }

  /* @ngInject */
  function $4() {

  }
})();
endsnippet

snippet ngmodule
(function() {
  'use strict'

  angular
    .module('${1:module}', [
      '${2:dependencies}'
    ])
})()
endsnippet

snippet ngservice
(function() {
  'use strict'

  angular
    .module('${1:module}')
    .factory('${2:Service}', $2)

  /* @ngInject */
  function $2 (${3:dependencies}) {
  var service = {
    ${4:func} = $4;
  }
  return service

    function $4 () {
    }
  }
})()
endsnippet

snippet ngresolve
/* @ngInject */
${1:func}: function (${2:dependencies}) {
 return $0
}
endsnippet

snippet nginject
/* @ngInject */
endsnippet

snippet hubot

// Description:
//   $0
//
// Commands:
//   hubot <trigger> - <what the respond trigger does>
//   <trigger> - <what the hear trigger does>
//
//
// Author:
//   jamesp.ingold@gmail.com
//
module.exports = function (robot) {
  ////
  // EXAMPLES
  // Below are some example Hubot interactions. You will want to delete these
  // from your actual script.
  ////

  // The 'hear' callback will match against any chat in text, not just messages
  // directed at Hubot.
  robot.hear(/orly/i, function (res) {
    // `send` will simply post this message back to chat
    res.send('yarly');
  });

  // The `respond` callback will only match if Hubot is mentioned at the start
  // of the message. E.g.,
  //
  //   you: hubot speak
  //   you: @hubot speak
  robot.respond(/speak/i, function (res) {
    // `reply` will, naturally, reply to the original sender.
    //
    //   you: hubot speak
    //   hubot: @you Arf!
    res.reply('Arf!');

    // `emote` will "emote" the text instead of saying it. In HipChat, for
    // example, this uses the /me command.
    //
    //   you: hubot speak
    //   hubot wags its tail
    res.emote('wags its tail');
  });

  // Regex match groups are available on the Response object. The format is
  // identical to any other JavaScript regex match, so the first element of the
  // array is the full text and subsequent elements are the capture groups in
  // the order they appear.
  robot.respond(/shout (.*)/i, function (res) {
    var msg = res.match[1];
    res.send(msg.toUpperCase());
  });
};
endsnippet
